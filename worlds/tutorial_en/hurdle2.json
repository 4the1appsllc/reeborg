{
  "robots": [
    {
      "x": 1,
      "y": 1,
      "_orientation": 0,
      "possible_initial_positions": [
        [
          1,
          1
        ]
      ]
    }
  ],
  "rows": 5,
  "cols": 14,
  "walls": {
    "2,1": [
      "east"
    ],
    "4,1": [
      "east"
    ],
    "6,1": [
      "east"
    ],
    "8,1": [
      "east"
    ],
    "10,1": [
      "east"
    ],
    "12,1": [
      "east"
    ]
  },
  "goal": {
    "position": {
      "image": "racing_flag",
      "x": 4,
      "y": 1
    },
    "possible_final_positions": [
      [
        8,
        1
      ],
      [
        10,
        1
      ],
      [
        12,
        1
      ],
      [
        14,
        1
      ],
      [
        6,
        1
      ],
      [
        4,
        1
      ]
    ]
  },
  "description": [
    "Reeborg has entered a hurdle race,",
    "but he does not know in advance how long the race is. ",
    "Make him run the course, following a path similar to the one shown,",
    "but stopping at the only flag that will be shown after the race has started.",
    "DIFFICULTY2"
  ],
  "onload": [
    "RUR.public['path'] = [[1,1], [2,1], [2,2], [3,2], [3,1], [4,1],",
    "    [4,2], [5,2], [5,1], [6,1], [6,2], [7,2], [7,1], [8,1],",
    "    [8,2], [9,2], [9,1], [10,1], [10,2], [11,2], [11,1], [12,1],",
    "    [12,2], [13,2], [13,1], [14,1]];",
    "RUR.show_path(RUR.public['path']);",
    "RUR.public.trim_path = function(){",
    "    var i, position, x, y, xx, yy, path = [];",
    "    position = RUR.get_current_world().goal.position;",
    "    x = position['x'];",
    "    y = position['y'];",
    "    for(i=0; i< RUR.public['path'].length; i++) {",
    "        xx = RUR.public['path'][i][0];",
    "        yy = RUR.public['path'][i][1];",    
    "        if(x == xx && y == yy){",
    "            path.push([xx, yy]);",
    "            break;",
    "        }",
    "        path.push([xx, yy]);",
    "    }",
    "    RUR.public['path'] = path;",
    "};"
  ],
  "pre": [
    "RUR.public.trim_path()",
    "RUR.show_path()"
  ],
  "post": [
    "RUR.check_path(RUR.public['path'],",
    "     {'failure':\"Reeborg did not follow the correct path.\", ",
    "      'show_path': 'true'})",
    ""
  ],
  "small_tiles": false
}