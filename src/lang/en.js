RUR.en = {};
RUR.en_to_en = {};

RUR.en["SITE NAME"] = "Reeborg's World";
RUR.en["WORLD INFO"] = "World Info";
RUR.en["EDITOR VISIBLE BLOCKLY"] = "Keep editor visible";

RUR.en["apple"] = "apple";
RUR.en_to_en["apple"] = "apple";
RUR.en["banana"] = "banana";
RUR.en_to_en["banana"] = "banana";
RUR.en["box"] = "box";
RUR.en_to_en["box"] = "box";
RUR.en["bridge"] = "bridge";
RUR.en_to_en["bridge"] = "bridge";
RUR.en["carrot"] = "carrot";
RUR.en_to_en["carrot"] = "carrot";
RUR.en["daisy"] = "daisy";
RUR.en_to_en["daisy"] = "daisy";
RUR.en["dandelion"] = "dandelion";
RUR.en_to_en["dandelion"] = "dandelion";
RUR.en["leaf"] = "leaf";
RUR.en_to_en["leaf"] = "leaf";
RUR.en["orange"] = "orange";
RUR.en_to_en["orange"] = "orange";
RUR.en.square = "square";
RUR.en_to_en["square"] = "square";
RUR.en.star = "star";
RUR.en_to_en["star"] = "star";
RUR.en["strawberry"] = "strawberry";
RUR.en_to_en["strawberry"] = "strawberry";
RUR.en.token = "token";
RUR.en_to_en["token"] = "token";
RUR.en.triangle = "triangle";
RUR.en_to_en["triangle"] = "triangle";
RUR.en["tulip"] = "tulip";
RUR.en_to_en["tulip"] = "tulip";

RUR.en["Problem with onload code."] = "Invalid Javascript onload code; contact the creator of this world.";
RUR.en["# from library import *"] = "# 'from library import *' in Python Code is required to use\n# the code in this library. \n\n";

RUR.en["Too many steps:"] = "Too many steps: {max_steps}";
RUR.en["<li class='success'>Reeborg is at the correct x position.</li>"] = "<li class='success'>Reeborg is at the correct x position.</li>";
RUR.en["<li class='failure'>Reeborg is at the wrong x position.</li>"] = "<li class='failure'>Reeborg is at the wrong x position.</li>";
RUR.en["<li class='success'>Reeborg is at the correct y position.</li>"] = "<li class='success'>Reeborg is at the correct y position.</li>";
RUR.en["<li class='failure'>Reeborg is at the wrong y position.</li>"] = "<li class='failure'>Reeborg is at the wrong y position.</li>";
RUR.en["<li class='success'>All objects are at the correct location.</li>"] = "<li class='success'>All objects are at the correct location.</li>";
RUR.en["<li class='failure'>One or more objects are not at the correct location.</li>"] = "<li class='failure'>One or more objects are not at the correct location.</li>";
RUR.en["<li class='success'>All walls have been built correctly.</li>"] = "<li class='success'>All walls have been built correctly.</li>";
RUR.en["<li class='failure'>One or more walls missing or built at wrong location.</li>"] = "<li class='failure'>One or more walls missing or built at wrong location.</li>";
RUR.en["Last instruction completed!"] = "Last instruction completed!";
RUR.en["<p class='center'>Instruction <code>done()</code> executed.</p>"] = "<p class='center'>Instruction <code>done()</code> executed.</p>";

RUR.en["Unknown object"] = "Unknown object: {obj}";
RUR.en["No object found here"] = "No {obj} found here!";
RUR.en["object"] = "object";
RUR.en["I don't have any object to put down!"] = "I don't have any {obj} to put down!";
RUR.en["There is already a wall here!"] = "There is already a wall here!";
RUR.en["Ouch! I hit a wall!"] = "Ouch! I hit a wall!";
RUR.en["Done!"] = "Done!";
RUR.en["There is no position as a goal in this world!"] = "There is no position as a goal in this world!";
RUR.en["There is no goal in this world!"] = "There is no goal in this world!";
RUR.en["I carry too many different objects. I don't know which one to put down!"] = "I carry too many different objects. I don't know which one to put down!";
RUR.en["Many objects are here; I do not know which one to take!"] = "Many different objects are here; I do not know which one to take!";

RUR.en.east = "east";
RUR.en.north = "north";
RUR.en.west = "west";
RUR.en.south = "south";
RUR.en["Unknown orientation for robot."] = "Unknown orientation for robot.";

RUR.en["World selected"] = "World {world} selected";
RUR.en["Could not find world"] = "Could not find world {world}";
RUR.en["Object names"] = " library, token, star, triangle, square, etc.";

RUR.en["Invalid world file."] = "Invalid world file.";
RUR.en["PERMALINK"] = "PERMALINK";
RUR.en["Could not find link: "] = "Could not find link: ";

RUR.en["Click on world to move robot."] = "Click on world to add or remove possible starting positions for Reeborg.";
RUR.en["Added robot."] = "Added Reeborg.";
RUR.en["Click on image to turn robot"] = "Click on image to turn Reeborg";
RUR.en["Robot now has tokens."] = "Reeborg now has {x_tokens} tokens.";
RUR.en["Click on world to add object."] = "Click on world to set number of {obj}.";
RUR.en["Click on desired object below."] = "Click on desired object below.";
RUR.en["Click on world to toggle walls."] = "Click on world to toggle walls.";
RUR.en["Click on world to set home position for robot."] = "Click on world to add/remove possible final positions for robot.";
RUR.en["Click on world to toggle additional walls to build."] = "Click on world to toggle additional walls to build.";
RUR.en["Click on desired goal object below."] = "Click on desired goal object below.";
RUR.en["Click on world to set number of goal objects."] = "Click on world to set number of goal {obj}.";
RUR.en["Enter number of tokens for robot to carry (use inf for infinite number)"] = "Enter number of tokens for Reeborg to carry.";
RUR.en[" is not a valid value!"] = " is not a valid value!";
RUR.en["Enter number of objects desired at that location."] = "Click on world to set number {obj}.";
RUR.en["Objects found here:"] = "Objects found here:";
RUR.en["Description"] = "Description";
RUR.en["A robot located here carries no objects."] = "A robot located at {x},{y} carries no objects.";
RUR.en["Goal to achieve:"] = "Goal to achieve:";
RUR.en["A robot located here carries:"] = "A robot located at {x},{y} carries:";
RUR.en["random location"] = "random location";
RUR.en["Enter number of objects to give to robot."] = "Enter number of {obj} to give to robot.";
RUR.en["Special information about this location:"] = "Special information about this location:";
RUR.en["Click on world to toggle tile."] = "Click on world to toggle {obj} tile.";
RUR.en["Click on desired tile below."] = "Click on desired tile below.";
RUR.en["mud"] = "mud";
RUR.en["water"] = "water";
RUR.en["grass"] = "grass";
RUR.en["gravel"] = "gravel";
RUR.en["ice"] = "ice";
RUR.en["A wall must be built east of this location."] = "A wall must be built east of this location.";
RUR.en["A wall must be built north of this location."] = "A wall must be built north of this location.";
RUR.en["A wall must be built west of this location."] = "A wall must be built west of this location.";
RUR.en["A wall must be built south of this location."] = "A wall must be built south of this location.";
RUR.en["The final required position of the robot will be chosen at random."] = "The final required position of the robot will be chosen at random.";
RUR.en["The final position of the robot must be (x, y) = "] = "The final position of the robot must be (x, y) = ";
RUR.en["Click on world to fill with given tile."] = "Click on world to fill with given tile.";
RUR.en["Click on desired object below."] = "Click on desired object below.";
RUR.en["Enter url of image to use as background."] = "Enter url of image to use as background.";
RUR.en["Replace editor content"] = "Do you wish to replace your editor code by that provided by the creator of this world?";
RUR.en["Replace library content"] = "Do you wish to replace your library code by that provided by the creator of this world?";
RUR.en["colour"] = "colour";

RUR.en["Name already exist; confirm that you want to replace its content."] = "Name already exist; confirm that you want to replace its content.";
RUR.en["No such world!"] = "No such world!";
RUR.en["Enter world name to save"] = "Enter world name to save; names in use: ";
RUR.en["Enter world name to delete"] = "Enter world name to delete; existing worlds: ";
RUR.en["Delete "] = "Delete ";

RUR.en["Error found at or near line {number}."] = "Error found at or near line {number}.";
RUR.en["<br>Perhaps a missing colon is the cause."] = "<br>Perhaps a missing colon is the cause.";
RUR.en["<br>Perhaps you forgot to add parentheses ()."] = "<br>Perhaps you forgot to add parentheses ().";
RUR.en["<br>Perhaps you misspelled a word or forgot to define a function or a variable."] = "<br>Perhaps you misspelled a word or forgot to define a function or a variable.";

RUR.en["I'm stuck in mud."] = "I'm stuck in mud.";
RUR.en["Mud: Reeborg <b>cannot</b> detect this and will get stuck if it moves to this location."] = "Mud: Reeborg <b>cannot</b> detect this and will get stuck if it moves to this location.";
RUR.en["I'm slipping on ice!"] = "I'm slipping on ice!";
RUR.en["Ice: Reeborg <b>cannot</b> detect this and will slide and move to the next location if it moves to this location."] = "Ice: Reeborg <b>cannot</b> detect this and will slide and move to the next location if it moves to this location.";
RUR.en["Grass: usually safe."] = "Grass: usually safe.";
RUR.en["Gravel: usually safe."] = "Gravel: usually safe.";
RUR.en["I'm in water!"] = "I'm in water!";
RUR.en["Water: Reeborg <b>can</b> detect this but will get damaged if it moves to this location."] = "Water: Reeborg <b>can</b> detect this but will get damaged if it moves to this location.";
RUR.en["green_home_tile: Reeborg <b>can</b> detect this tile using at_goal()."] = "green_home_tile: Reeborg <b>can</b> detect this tile using at_goal().";
RUR.en["Crash!"] = "Crash!";
RUR.en["brick wall: Reeborg <b>can</b> detect this but will hurt himself if he attemps to move through it."] = "Brick wall: Reeborg <b>can</b> detect this but will hurt himself if he attemps to move through it.";
RUR.en["I hit a fence!"] = "I hit a fence!";
RUR.en["Fence: Reeborg <b>can</b> detect this but will be stopped by it."] = "Fence: Reeborg <b>can</b> detect this but will be stopped by it.";
RUR.en["Bridge:"] = "Bridge: ";
RUR.en["Reeborg <b>can</b> detect this and will know that it allows safe passage over water."] = "Reeborg <b>can</b> detect this and will know that it allows safe passage over water.";

RUR.en["Something is blocking the way!"] = "Something is blocking the way!";
RUR.en["Reeborg <b>can</b> detect this tile using at_goal()."] = "Reeborg <b>can</b> detect this using at_goal().";
RUR.en["green home tile:"] = "green home tile:";
RUR.en["home:"] = "home:";
RUR.en["racing flag:"] = "racing flag:";
RUR.en["house:"] = "house:";

RUR.en["fence_right"] = "fence";
RUR.en["fence_left"] = "fence";
RUR.en["fence_double"] = "fence";
RUR.en["fence_vertical"] = "fence";

RUR.en["Local variables"] = "Local variables";
RUR.en["Global variables"] = "Global variables";
RUR.en["Watched expressions"] = "Watched expressions";

RUR.en["move forward"] = "move forward";
RUR.en["write"] = "write";
RUR.en["turn left"] = "turn left";
RUR.en["take object"] = "take object";
RUR.en["put object"] = "put object";
RUR.en["Pause the program's execution."] = "Pause the program's execution.";
RUR.en["Build a wall in front of the robot."] = "Build a wall in front of the robot.";
RUR.en["End the program's execution."] = "End the program's execution.";
RUR.en["True if a wall is blocking the way."] = "True if a wall is blocking the way";
RUR.en["True if nothing is blocking the way."] = "True if nothing is blocking the way.";
RUR.en["True if desired destination."] = "True if desired destination.";
RUR.en["True if robot carries at least one object."] = "True if robot carries at least one object.";
RUR.en["True if there is at least one object here."] = "True if there is at least one object here.";
RUR.en["True if robot is facing North."] = "True if robot is facing North.";
RUR.en["Delay between actions; default is 300 ms."] = "Delay between actions; default is 300 ms.";

RUR.en["Save world in browser"] = "Save world in browser";
RUR.en["LOAD EDITOR"] = "Import program from file";
RUR.en["LOAD EDITOR EXPLAIN"] = "Opens a local file and use its content to replace the content of the Code editor.";
RUR.en["LOAD LIBRARY"] = "Import library from a file";
RUR.en["LOAD LIBRARY EXPLAIN"] = "Opens a file and use its content to replace the current content of the Library.";
RUR.en["LOAD WORLD"] = "Open world from file";
RUR.en["LOAD WORLD EXPLAIN"] = "Loads a world from a file on your computer.";
RUR.en["SAVE EDITOR"] = "Save program to file";
RUR.en["SAVE EDITOR EXPLAIN"] = "Saves the content of the editor in a file.";
RUR.en["SAVE LIBRARY"] = "Save the library";
RUR.en["SAVE LIBRARY EXPLAIN"] = "Saves the content of the library in a file.";
RUR.en["SAVE WORLD"] = "Save world to file";
RUR.en["SAVE WORLD EXPLAIN"] = "Saves the world (as a json object) to a file on your computer.";
RUR.en["ADD EDITOR TEXT"] = "Add editor content to world";
RUR.en["ADD LIBRARY TEXT"] = "Add library content to world";
RUR.en["KEYBOARD BUTTON"] = "Reeborg's keyboard";
RUR.en["ADDITIONAL OPTIONS"] = "Additional options";

RUR.en["BASIC COMMANDS"] = "Basic commands";
RUR.en["DEFINING"] = "Defining";
RUR.en["LOOPS"] = "Loops";
RUR.en["DECISIONS"] = "Decisions";
RUR.en["CONDITIONS"] = "Conditions";
RUR.en["USING VARIABLES"] = "Using variables";
RUR.en["COMMANDS"] = "Commandes";
RUR.en["OTHER"] = "Other";
RUR.en["OBJECTS"] = "Objects";

RUR.en["Python Code"] = "Python Code";
RUR.en["Javascript Code"] = "Javascript Code";
RUR.en["LIBRARY"] = "library";
RUR.en["PRE"] = "Pre";
RUR.en["POST"] = "Post";
RUR.en["DESCRIPTION"] = "Desc.";
RUR.en["ONLOAD"] = "Onload";

RUR.en["HIGHLIGHT IMPOSSIBLE"] = "A problem with your code has caused me to turn off the code highlighting.";
RUR.en["COMMAND RESULT"] = "Select action to perform from menu below.";

RUR.en["COPY"] = "Copy";
RUR.en["COPY PERMALINK EXPLAIN"] = "Copy the permalink to the clipboard.";
RUR.en["Save"] = "Save";
RUR.en["Save permalink explanation"] = "Saves a copy of the permalink to a file.";
RUR.en["REPLACE PERMALINK"] = "Replace";
RUR.en["REPLACE PERMALINK EXPLAIN"] = "Replace the content above by a different permalink and click on Replace";
RUR.en["CANCEL"] = "Cancel";

RUR.en["DELETE WORLD TEXT"] = "The following refers to worlds currently stored in your browser which you can delete:";
RUR.en["PYTHON ONLY"] = "Python only";
RUR.en["COLLABORATION"] = "Collaboration";
RUR.en["TOGETHERJS EXPLAIN"] = "Tool which permits collaboration with one or more other user using Mozilla's TogetherJS.";
RUR.en["WORLD CREATION TITLE"] = "World: creation, edition, ...";
RUR.en["EDIT WORLD"] = "Edit world";
RUR.en["EDIT WORLD EXPLAIN"] = "You can create your own world by editing the current one.";
RUR.en["PROGRAM IN EDITOR"] = "Program in editor";
RUR.en["SPECIAL EXECUTION"] = "Special execution features";
RUR.en["REVERSE STEP EXPLAIN"] = "Reverses the previous execution step.";
RUR.en["ERASE TRACE"] = "Erase trace";
RUR.en["ERASE TRACE EXPLAIN"] = "Erases the trace left by Reeborg. This can be useful to focus on what happens after a program is paused.";
RUR.en["CONTACT"] = "(English/French only) Email:";
RUR.en["ISSUES"] = "Bug reports, suggestions, other issues, etc. (English/French only)";
RUR.en["FORUM"] = "Discussion forum (English/French only)";
RUR.en["HELP"] = "Help";
RUR.en["DOCUMENTATION"] = '<a href="http://reeborg.ca/docs/en" target="_blank">Documentation</a>';
RUR.en["PYTHON HELP"] = "Using Python, execute a program with <code>help()</code> to get a list of commands or <code>help(move)</code> to get help on the <code>move()</code> function, etc.";
RUR.en["KEYBOARD HELP"] = "Click on Reeborg keyboard to see a list of available commands, Python keywords, etc.";

RUR.en["WORLD EDITOR"] = "World editor";
RUR.en["m-east"] = "East";
RUR.en["m-north"] = "North";
RUR.en["m-west"] = "West";
RUR.en["m-south"] = "South";
RUR.en["m-random"] = "Random";
RUR.en["m-dimensions"] = "World dimensions";
RUR.en["m-add"] = "Add";
RUR.en["m-add-robot"] = "Add robot";
RUR.en["m-robot"] = "Robot";
RUR.en["m-position"] = "Position(s)";
RUR.en["m-turn"] = "Turn";
RUR.en["m-objects"] = "Objects";
RUR.en["m-walls"] = "Walls";
RUR.en["m-objects2"] = "Objects";
RUR.en["m-tiles"] = "Tiles";
RUR.en["m-fill"] = "Fill";
RUR.en["m-solid"] = "Solid objects";
RUR.en["m-decorative"] = "Decorative objects";
RUR.en["m-background"] = "Background image";
RUR.en["m-goal"] = "Goal";
RUR.en["mg-robot"] = "Robot";
RUR.en["mg-walls"] = "Walls";
RUR.en["mg-objects"] = "Objects";

RUR.en["Reeborg says: I'm done!"] = "Reeborg says: I'm done!";
RUR.en["Reeborg writes:"] = "Reeborg writes:";
RUR.en["Reeborg shouts: Something is wrong!"] = "Reeborg shouts: Something is wrong!";
RUR.en["Reeborg explores some Javascript code"] = "Reeborg explores some Javascript code";
RUR.en["Reeborg states:"] = "Reeborg states:";
RUR.en["Reeborg watches some variables!"] = "Reeborg watches some variables!";
RUR.en["Click on the world to get some additional information."] = "Click on the world to get some additional information.";

RUR.en["Reeborg's basic keyboard"] = "Reeborg's basic keyboard";
RUR.en["kbd-command-btn"] = "Commands";
RUR.en["kbd-condition-btn"] = "Conditions";
RUR.en["kbd-python-btn"] = "Python";
RUR.en["kbd-py-console-btn"] = "Python";
RUR.en["kbd-javascript-btn"] = "Javascript";
RUR.en["kbd-objects-btn"] = "Objects";
RUR.en["kbd-special-btn"] = "Special";


// Only translate the strings below if the corresponding functions are
// defined in reeborg_xx.js and reeborg_xx.py
RUR.en["at_goal"] = "at_goal";
RUR.en["at_goal()"] = "at_goal()";
RUR.en["front_is_clear"] = "front_is_clear";
RUR.en["front_is_clear()"] = "front_is_clear()";
RUR.en["right_is_clear"] = "right_is_clear";
RUR.en["right_is_clear()"] = "right_is_clear()";
RUR.en["wall_in_front"] = "wall_in_front";
RUR.en["wall_in_front()"] = "wall_in_front()";
RUR.en["wall_on_right"] = "wall_on_right";
RUR.en["wall_on_right()"] = "wall_on_right()";
RUR.en["object_here"] = "object_here";
RUR.en["object_here()"] = "object_here()";
RUR.en["carries_object"] = "carries_object";
RUR.en["carries_object()"] = "carries_object()";
RUR.en["is_facing_north"] = "is_facing_north";
RUR.en["is_facing_north()"] = "is_facing_north()";

RUR.en["move"] = "move";
RUR.en["move()"] = "move()";
RUR.en["turn_left"] = "turn_left";
RUR.en["turn_left()"] = "turn_left()";
RUR.en["take"] = "take";
RUR.en["take()"] = "take()";
RUR.en["put"] = "put";
RUR.en["put()"] = "put()";
RUR.en["build_wall"] = "build_wall";
RUR.en["build_wall()"] = "build_wall()";
RUR.en["pause"] = "pause";
RUR.en["pause()"] = "pause()";
RUR.en["done"] = "done";
RUR.en["done()"] = "done()";
RUR.en["think"] = "think";
RUR.en["think()"] = "think()";
RUR.en["think(100)"] = "think(100)";
RUR.en["sound"] = "sound";
RUR.en["sound(True)"] = "sound(True)";
RUR.en["sound(true)"] = "sound(true)";
RUR.en["World"] = "World";
RUR.en["World()"] = "World()";
RUR.en["UsedRobot"] = "UsedRobot";
RUR.en["UsedRobot()"] = "UsedRobot()";
RUR.en["new UsedRobot"] = "new UsedRobot";
RUR.en["new UsedRobot()"] = "new UsedRobot()";
RUR.en["no_highlight"] = "no_highlight";
RUR.en["no_highlight()"] = "no_highlight()";

RUR.en["tab"] = "TAB";
RUR.en["shift-tab"] = "Shift-TAB";
RUR.en["enter"] = "\u23CE";
